{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"function roundStr(num, numDecimalPlaces)\n\treturn string.format(\"%.\" .. (numDecimalPlaces or 0) .. \"f\", num)\nend\n---------------------------\n-- CSS\n---------------------------\ncss = {}\ncss.color = {\n    green = \"#54b86d\",\n    red = \"#b85454\",\n    darkblue = \"#293d61\",\n}\ncss.globalPadding = \"padding-bottom: 0%;\"\ncss.globalBackGround = \"background-color: \"..css.color.darkblue..\";\"\ncss.panelWidth = \"100%\"\ncss.panelHeight = \"100%\"\ncss.fontSize = {\n    default = \"1.5em\",\n    powerElement = \"1.5em\",\n}\ncss.class = {\n    default = \"panelDefault\",\n    powerElement = \"panelPowerElement\",\n}\n\nfunction css.getBG(value)\n    local color = (value == 1) and css.color.green or css.color.red\n\tlocal s = [[style=\"background-color: ]]..color..[[;\"]]\n    return s;\nend\nfunction css.getDefaultStyle(arg)\n    local size = css.fontSize.default\n    if (arg) then size = arg.fontsize or size end\n    local style = [[\n    <style>\n    H1,H2,H3,H4 {background-color: cornflowerblue; color: black !important; text-align: center;}\n    th, td {font-size: ]]..size..[[;\n    }\n    td {\n        color: cornflowerblue !important;\n        background-color: ]]..css.color.darkblue..[[;\n        font-weight: normal !important;\n        text-align: center;\n        padding-top: 0.5%;\n        padding-bottom: 0.5%\n    }\n    .]]..css.class.default..[[ {\n        ]]..css.globalBackGround..[[\n    }\n    ]]\n    return style\nend\nfunction css.getEmptyPanel(arg)\n    local title = arg.title or \"<H2>Void Panel</H2>\"\n    local columnAmount = arg.columnAmount or 1\n    local columnSpacing = arg.columnSpacing or {}\n    local class = arg.class or css.class.default\n    \n    local panel = [[\n    <div class=\"]]..class..[[\">\n    <div style=\"]]..css.globalPadding..[[ text-align: left;\">\n    ]]..title..[[\n    <table align=center>\n    <tr><th width=2%></th>]]\n    for i = 1, columnAmount do\n        panel = panel ..[[<th></th><th width=]]..(columnSpacing[i] or \"2\")..[[%></th>]]\n    end\n    panel = panel ..\"</tr>\"\n\n    if arg.columnTitles then\n        panel = panel .. [[<tr><td></td>]]\n        for i, v in ipairs(arg.columnTitles) do\n            panel = panel .. [[<td><H5>]]..v..[[</H5></td><td></td>]]\n        end\n        panel = panel .. [[</tr>]]\n    end\n\n    return panel\nend\n\n\n-------------------------------------------------\n-- config\n-------------------------------------------------\nlocal tableEnd = \"</table>\"\nlocal styleEnd = \"</style>\"\nlocal stylePanelEnd = \"</div>\"\nlocal screenDivEnd = \"</div>\"\n\nfunction getStyleFor(key)\n    local html = [[\n    .]]..css.class[key]..[[ th, .]]..css.class[key]..[[ td {\n    font-size: ]]..css.fontSize[key]..[[ !important;\n    }\n    .]]..css.class[key]..[[ {\n    ]]..css.globalBackGround..[[\n    position: absolute;\n    top: 0.5%;\n    left: 0.5%;\n    }\n    ]]\n    return html\nend\n\nfunction\tgetElementStats(e, name)       \n    local maxTCurrent = e.getMaxThrust()\n    local currentThrust = e.getThrust()\n    local percentThrust = maxTCurrent ~= 0 and (currentThrust / maxTCurrent) or 0\n    local maxTBase = e.getMaxThrustBase()\n    local maxTEfficiency = e.getMaxThrustEfficiency()\n    local obstructionFactor = e.getObstructionFactor()\n\n    local decimal = 2\n    local html = [[\n    <tr>\n    <td></td>\n    <td>]]..name..[[</td><td></td>\n    <td ]]..css.getBG(obstructionFactor ~= 0 and 0 or 1)..[[></td><td></td>\n    <td>]]..roundStr(obstructionFactor * 100, decimal)..[[</td><td></td>\n    <td>]]..roundStr(currentThrust, 0)..\" (\"..roundStr(percentThrust * 100, 0)..\"%)\"..[[</td><td></td>\n    <td>]]..(maxTCurrent and roundStr(maxTCurrent, 0) or \"-\")..[[ N</td><td></td>\n    <td>]]..(maxTBase and roundStr(maxTBase, 0) or \"-\")..[[ N</td><td></td>\n    <td>]]..roundStr(maxTEfficiency * 100, decimal)..[[</td><td></td>\n    </tr>]]\n\treturn html\nend\n\nfunction getListElementStats(elements)\n    local html = \"\"\n    for i, v in ipairs(elements) do\n    \tlocal title = i..\"\"\n    \thtml = v and (html..getElementStats(v, title)) or html\n    end\n    html = html..tableEnd\n\thtml = html..stylePanelEnd..screenDivEnd\n\treturn html\nend\n\n\n--------------------------------------\n-- start\n--------------------------------------\n-- atmo/space engines, hovers, rockets, stabilizers, wings, adjusters, atmo/space brakes, others ?\nslots = {slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9, slot10,}\n\nlocal key = \"powerElement\"\npanelBase = css.getDefaultStyle{fontsize = css.fontSize.default} .. getStyleFor(key) .. styleEnd\npanelBase = panelBase .. css.getEmptyPanel{\n    title = \"<H2>Elements Statistics</H2>\",\n    columnAmount = 7,\n    columnTitles = {\"Slots\", \"\", \"Obstruction %\", \"Current Thrust\", \"Current Max Thrust\", \"Base Max Trust\", \"Efficiency %\"},\n    class = css.class[key],\n}\n\nunit.hide()\nsystem.showScreen(1)\nunit.setTimer(\"hud\", 0.5)","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"system.setScreen(panelBase..getListElementStats(slots))","filter":{"args":[{"value":"hud"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"1"}],"methods":[],"events":[]}